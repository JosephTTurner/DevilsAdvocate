message("Error in min slope calculation.")
return(NA)})
return(min)
}
optNumClust <- function(data) {
return(minSlope(withinSumsSquares(data)))
}
tagMatrix = readxl::read_excel(file, sheet = 2)
distinctName =  strsplit(strsplit(file, "tagReports-")[[1]][2], ".xlsx")[[1]][1]
message(paste("Analyzing : ", distinctName))
dir.create(paste(
"C:/workspace/ComputationalThinking/RAnalysis/Plots/Optimal/",
distinctName, "_NoData", sep = ""), mode = "0777")
dir.create(paste(
"C:/workspace/ComputationalThinking/RAnalysis/Plots/Optimal/",
distinctName, "_WithData", sep = ""), mode = "0777")
maxLevel = max(tagMatrix$Ideal)
numSets = maxLevel + 1
tagMatrixNoData = tagMatrix[,-grep("data", colnames(tagMatrix))]
optNumClustWithData = optNumClust(tagMatrix)
optNumClustNoData = optNumClust(tagMatrixNoData)
optNumClustWithData = optNumClust(tagMatrix)
optNumClustNoData = optNumClust(tagMatrixNoData)
optNumClustWithData = optNumClust(tagMatrix)
optNumClustWithData = optNumClust(tagMatrix)
debugSource('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
fBody
debugSource('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
optNumClustWithData = optNumClust(tagMatrix)
optNumClustWithData = optNumClust(tagMatrix)
optNumClustWithData = optNumClust(tagMatrix)
optNumClustWithData = optNumClust(tagMatrix)
return(minSlope(wss))
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
wss
Q
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
func = approxfun(wssWithData)
slopes = lapply(numCenters, function(x) hessian(func, x))
??hessian
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
optKCNoData = kmeans(tagMatrixNoData, centers = optNumClustNoData, iter.max = 100)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
withinSumsSquares(tagMatrix)
wss = withinSumsSquares(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
plot(wss)
wss = withinSumsSquares(tagMatrix)
withinSumsSquares
numCenters
which.min(wss)
wss = withinSumsSquares(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
optNumClust(tagMatrix)
??xmeans
install.packages("RWeka")
library(RWeka)
XMeans(tagMatrix)
xmeans(tagMatrix)
??XMeans
RWeka::XMeans(tagMatrix)
RWeka::XMeans(tagMatrix, NULL)
??WMP
??WPM
rm(list=ls())
load("RWeka")
detach("package:RWeka", unload=TRUE)
library("RWeka", lib.loc="~/R/win-library/3.3")
library("RWekajars", lib.loc="~/R/win-library/3.3")
source('C:/workspace/ComputationalThinking/RAnalysis/IsolateByNode.R', echo=TRUE)
XMeans(x = taMatrix, control = NULL)
library(XMeans)
install.packages("XMeans")
install.packages("weka.clusterers")
install.packages("C:/Users/Joe Turner/Downloads/XMeans1.0.4.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/Joe Turner/Downloads/XMeans1.0.4.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/Joe Turner/Downloads/XMeans1.0.4.zip", repos = NULL, type = "win.binary")
WPM("install-package", "XMeans")
install.packages("RWeka")
WPM("install-package", "XMeans")
library(RWeka)
library(RWekajars)
WPM("install-package", "XMeans")
dir.create("C:/Users/JOETUR~1/AppData/Local/Temp/RtmpMH9zuk/RWeka19d0514a439f/packages", chmod = "0777")
dir.create("C:/Users/JOETUR~1/AppData/Local/Temp/RtmpMH9zuk/RWeka19d0514a439f/packages", mode = "0777")
detach("package:RWekajars", unload=TRUE)
WPM("install-package", "XMeans")
library("RWeka", lib.loc="~/R/win-library/3.3")
WPM("ip", "XMeans")
WPM("install-package", "XMeans")
library("RWekajars", lib.loc="~/R/win-library/3.3")
WPM("install-package", "XMeans")
install.packages("RWeka")
library(RWeka)
WPM("install-packages", "XMeans")
WPM("install-package", "XMeans")
library("RWeka", lib.loc="~/R/win-library/3.3")
library("RWekajars", lib.loc="~/R/win-library/3.3")
WPM("install-packages", "XMeans")
WPM("install-package", "XMeans")
install.packages("RWeka")
install.packages("RWekajars")
library("RWeka", lib.loc="~/R/win-library/3.3")
library("RWekajars", lib.loc="~/R/win-library/3.3")
WPM("install-package", "XMeans")
RWeka::XMeans(tagMatrix)
WPM("install-package", "XMeans")
XMeans(tagMatrix)
x = XMeans(tagMatrix)
plot(x)
plot(x$clusterer$`clusterInstance(`)
plot(x$class_ids_
plot(x$class_ids)
plot(x$class_ids)
??XMeans
?Xmeans
?XMeans
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
dev.off()
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
plot(optKCWithData$class_ids,
ylab = "Clusters",
main = paste(distinctName, ": With Data, All AST Levels"),
col = "white")
with(optKCWithData$class_ids, text(tagMatrix$StudentID, cex = .7))
optKCWithData$class_ids[[1]]
optKCWithData$class_ids[1
]
optKCWithData$class_ids[1]
optKCWithData$class_ids[2]
optKCWithData$class_ids[[1]]
optKCWithData$class_ids[[3]]
optKCWithData$class_ids[[4]]
optKCWithData$class_ids
optKCWithData$class_ids[2,]
optKCWithData$class_ids[1,]
optKCWithData$class_ids[[2]]
optKCWithData$class_ids[][1]
View(optKCWithData$class_ids)
optKCWithData$class_ids[1][]
optKCWithData$class_ids[0,]
optKCWithData$class_ids[1,]
optKCWithData$class_ids[[1,]]
optKCWithData$class_ids[[1,:]]
optKCWithData$class_ids[1,;]
optKCWithData$class_ids[1,:]
optKCWithData$class_ids[1,.]
optKCWithData$class_ids[1;]
optKCWithData$class_ids
optKCWithData$class_ids[[]]
optKCWithData$class_ids[[1:2359]]
optKCWithData$class_ids[1:2359]
optKCWithData$class_ids[1:2359,]
optKCWithData$class_ids[1:2359,2]
optKCWithData$class_ids[1:2359][2]
optKCWithData$class_ids[1:2359]
optKCWithData$class_ids[,1:2359]
optKCWithData$class_ids[2][1:2359]
optKCWithData$class_ids[1:2359][2]
optKCWithData$class_ids[1:2359][1]
optKCWithData$class_ids[1][1]
optKCWithData$class_ids[2][1]
optKCWithData$class_ids[2][2]
optKCWithData$class_ids[2][3]
optKCWithData$class_ids[2][2]
optKCWithData$class_ids[2][1]
optKCWithData$class_ids[2][0]
optKCWithData$class_ids[0][0]
optKCWithData$class_ids[1][0]
optKCWithData$class_ids[0][]
optKCWithData$class_ids[0][1]
optKCWithData$class_ids[0][0]
x = as.array(optKCWithData)
x = as.array(optKCWithData$class_ids)
x
x[1]
x[2]
x[[1]]
x[[1:2359]]
as.list(x)
l = as.list(x)
l[1:4]
plot(l)
plot(l, 1:2359)
plot(l ~ 1:2359)
plot(1:2359, l)
plot(x)
with(text(tagMatrix$StudentID))
with(l, text(tagMatrix$StudentID))
with(x, text(tagMatrix$StudentID))
plot(x)
with(x, text(tagMatrix$StudentID))
with(l, text(tagMatrix$StudentID))
with(l, text(tagMatrixNoData$StudentID))
plot(x)
with(l, text(tagMatrixNoData$StudentID))
plot(x)
with(l, text(tagMatrixNoData$StudentID, cex = .7))
plot(tagMatrix$StudentID, col = optKCWithData$class_ids)
with(tagMatrix$StudentID, text(tagMatrix$StudentID, cex = .7))
plot(optKCWithData$class_ids,
ylab = "Clusters",
main = paste(distinctName, ": With Data, All AST Levels"),
col = "white")
with(tagMatrix, text(optKCWithData$class_ids, labels = (tagMatrix$StudentID), cex = .7))
plot(optKCWithData$class_ids,
ylab = "Clusters",
main = paste(distinctName, ": With Data, All AST Levels"),
)#col = "white")
with(tagMatrix, text(optKCWithData$class_ids, labels = (tagMatrix$StudentID), cex = .7))
plot(optKCWithData$class_ids,
ylab = "Clusters",
main = paste(distinctName, ": With Data, All AST Levels"),
col = "white")
with(tagMatrix, text(optKCWithData$class_ids, labels = (tagMatrix$StudentID), cex = .7))
plot(optKCNoData$class_ids,
ylab = "Clusters",
main = paste(distinctName, ": No Data, All AST Levels"),
col = "white")
with(tagMatrixNoData, text(optKCNoData$class_ids, labels = (tagMatrixNoData$StudentID), cex = .7))
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
plot(optKCByASTWithData[[level]]$class_ids,
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(2 = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids,
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(2 = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
plot(optKCByASTWithData[[level]]$class_ids,
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
plot(optKCByASTWithData[[level]]$class_ids,
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
plot(optKCByASTWithData[[level]]$class_ids,
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids)),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids)),
las = 2)
??las
?las
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids)),
las = 1)
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids)),
las = 1)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids + 1, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids)),
las = 1)
plot(optKCByASTWithData[[level]]$class_ids + 1, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids + 1)),
las = 1)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids + 1, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 1:(which.max(optKCByASTWithData[[level]]$class_ids + 1)),
las = 2)
plot(optKCByASTWithData[[level]]$class_ids + 1, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTWithData[[level]]$class_ids + 1)),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTWithData[[level]]$class_ids + 1)),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTWithData[[level]]$class_ids)) + 1,
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
plot(optKCByASTNoData[[level]]$class_ids,
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTNoData[[level]]$class_ids) + 1),
las = 2)
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTNoData[[level]]$class_ids) + 1),
las = 2)
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTNoData[[level]]$class_ids)),
las = 2)
axis(side = 2,
at = 0:(which.max(optKCByASTNoData[[level]]$class_ids)),
las = 2)
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTNoData[[level]]$class_ids) + 1),
las = 2)
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
if (!is.na(optKCByASTWithData[[level]])){
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTWithData[[level]]$class_ids) + 1),
las = 2)
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
}
if (!is.na(optKCByASTNoData[[level]])){
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
axis(side = 2,
at = 0:(which.max(optKCByASTNoData[[level]]$class_ids) + 1),
las = 2)
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
}
if (!is.na(optKCByASTWithData[[level]])){
plot(optKCByASTWithData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "With Data", "Level ", level - 1, sep = " "), col = "white")
with(tagASTWithData, text(optKCByASTWithData[[level]]$class_ids, labels = (tagASTWithData[[level]]$StudentID), cex = .7, col = optKCByASTWithData[[level]]$class_ids + 1))
}
if (!is.na(optKCByASTNoData[[level]])){
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
}
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n", ylab = "Clusters",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
plot(optKCByASTNoData[[level]]$class_ids, yaxt = "n", ylab = "Clusters", xlab = "Data Point Index",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
plot(tagASTNoData$Score, yaxt = "n", ylab = "Clusters", xlab = "Data Point Index",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
plot(tagASTNoData[[level]]$Score, yaxt = "n", ylab = "Clusters", xlab = "Data Point Index",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
with(tagASTNoData, text(optKCByASTNoData[[level]]$class_ids, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
plot(tagASTNoData[[level]]$Score, yaxt = "n", ylab = "Clusters", xlab = "Data Point Index",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
with(tagASTNoData, text(tagASTNoData[[level]]$Score, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
plot(tagASTNoData[[level]]$StudentID, tagASTNoData[[level]]$Score, yaxt = "n", ylab = "Clusters", xlab = "Data Point Index",
main = paste(distinctName, ": ", "No Data,", "Level ", level - 1, sep = " "), col = "white")
with(tagASTNoData, text(tagASTNoData[[level]]$Score, labels = (tagASTNoData[[level]]$StudentID), cex = .7, col = optKCByASTNoData[[level]]$class_ids + 1))
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
rm(list=ls())
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
WPM("install-package", "XMeans")
source('C:/workspace/ComputationalThinking/RAnalysis/ByNodeOptimalClusters.R', echo=TRUE)
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "")
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "")
library(readr)
compiledList <- read_csv("C:/workspace/DevilsAdvocate/DataAnalysis/compiledList.csv")
View(compiledList)
compiledList=compiledList[order(compiledList$site_name),]
compressedList = data.frame(matrix(nrow=(877), ncol = 6))
c = 1
for (row in 1:nrow(compiledList)){
if(row < nrow(compiledList)){
if (compiledList[row,1] == compiledList[row+1,1]){
compressedList[c,] = c(compiledList[row+1,1:4], compiledList[row,5:6])
c = c + 1
}
else if (row > 1){
if (compiledList[row,1] == compiledList[row - 1,1]){
}
else{
compressedList[c,] = compiledList[row,]
c = c + 1
}
}
else{
compressedList[c,] = compiledList[row,]
c = c + 1
}
}
else{
if (compiledList[row,1] == compiledList[row - 1,1]){
}
else{
compressedList[c,] = compiledList[row,]
c = c + 1
}
}
}
colnames(compressedList) = colnames(compiledList)
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "")
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "")
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "", sep = ",")
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "", sep = ",")
wd
getwd
getwd()
setwd("C:/workspace/DevilsAdvocate/Linktree")
getwd()
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = TRUE, na = "", sep = ",")
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = FALSE, na = "")
getwd()
write.csv(x = compressedList, file = "BadSources.csv", row.names = FALSE, quote = FALSE, na = "")
